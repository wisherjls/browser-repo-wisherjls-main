import pluginJs from "@eslint/js";
import eslintConfigPrettier from "eslint-config-prettier/flat";
import globals from "globals";

/** @type {import('eslint').Linter.Config[]} */
export default [
  { languageOptions: { globals: globals.browser } },
  pluginJs.configs.recommended,
  eslintConfigPrettier,
  {
    rules: {
      // Error prevention
      "no-extra-boolean-cast": "error",
      "no-useless-catch": "error",
      "no-useless-constructor": "error",
      "no-useless-rename": "error",
      "no-with": "error",
      "no-const-assign": "error",
      "no-constant-condition": "error",
      "no-empty-pattern": "error",
      "no-inner-declarations": "error",
      "no-self-assign": "error",
      "no-unreachable": "error",
      "use-isnan": "error",
      "no-delete-var": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-debugger": "error",
      "no-dupe-args": "error",
      "no-dupe-class-members": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-ex-assign": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-obj-calls": "error",
      "no-redeclare": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-this-before-super": "error",
      "no-undef": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unused-labels": "error",
      "no-useless-escape": "error",
      "no-useless-return": "error",
      "no-void": "error",
      "valid-typeof": "error",

      // Modern JavaScript
      "prefer-arrow-callback": "error",
      "prefer-const": "error",
      "no-var": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-exponentiation-operator": "error",
      "prefer-numeric-literals": "error",
      "prefer-object-spread": "error",
      "object-shorthand": "error",
      "prefer-destructuring": ["error", { object: true, array: false }],

      // Security & best practices
      "no-alert": "error",
      "no-eval": "error",
      "no-implied-eval": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-proto": "error",
      "no-return-await": "error",
      "no-self-compare": "error",
      "no-throw-literal": "error",
      "no-unused-expressions": "error",
      "no-useless-call": "error",
      "no-useless-concat": "error",
      "require-await": "error",
      yoda: "error",
      "no-array-constructor": "error",
      "no-new-object": "error",

      // Biome's recommendations
      "no-duplicate-imports": "error",
      "no-useless-computed-key": "error",
      "no-template-curly-in-string": "error",
      "no-unmodified-loop-condition": "error",
      "no-unreachable-loop": "error",
      "no-unused-private-class-members": "error",
      "no-useless-backreference": "error",

      "no-console": 0,
    },
  },
];
